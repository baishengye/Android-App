plugins {
    id 'com.android.application'

    //SharedSDK插件
    id 'com.mob.sdk'
}

android {
    //编译版本
    compileSdk rootProject.ext.compileSdk

    //buildToolVersion "31.0.2"编译工具版本，新版本的AS中不用显式写出，工具会自动调用

    //默认配置
    defaultConfig {
        //app唯一标识
        applicationId rootProject.ext.applicationId

        //最小版本
        minSdk rootProject.ext.minSdk

        //目标版本
        targetSdk rootProject.ext.targetSdk

        //版本号
        versionCode rootProject.ext.versionCode

        //版本名称
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //开启MultiDex
        multiDexEnabled true

        //产品风味的维度就是该版本号
        flavorDimensions "versionCode"
    }

    //签名配置
    //要写到使⽤签名配置的前⾯
    signingConfigs {
        //以下两个版本都⽤的是同⼀个
        //真实项⽬中可能会⽤多个
        debug{
            //签名文件路径
            storeFile file('../config/cloudmusic_app_key.jks')

            //key密码
            storePassword "156235"

            //别名
            keyAlias "cloudmusic"

            //签名密码
            keyPassword "156235"
        }

        //正式版签名
        release{
            //签名文件路径
            storeFile file('../config/cloudmusic_app_key.jks')

            //key密码
            storePassword "156235"

            //别名
            keyAlias "cloudmusic"

            //签名密码
            keyPassword "156235"
        }
    }

    buildTypes {
        //debug版本
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            //签名配置
            signingConfig signingConfigs.debug
        }

        //正式版本
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            //签名配置
            signingConfig signingConfigs.release
        }
    }

    //源码兼容到java8
    //黄油刀需要java8
    compileOptions {
        sourceCompatibility rootProject.ext.compileOptions
        targetCompatibility rootProject.ext.compileOptions
    }

    viewBinding {
        enabled = true
    }

    //配置不同的环境
    productFlavors{
        //开发环境
        dev {
            //API端点
            buildConfigField('String',"ENDPOINT",'"http://dev-my-cloud-music-api-rails.ixuea.com/"')
            //资源端点
            buildConfigField('String',"RESOURCE_ENDPOINT",'"http://dev-courses-misuc.ixuea.com/%s"')
            dimension = minSdkVersion
        }
        //正式环境
        prod {
            //API端点
            buildConfigField 'String','ENDPOINT','"http://api-courses-misuc.ixuea.com/"'
            buildConfigField('String',"RESOURCE_ENDPOINT",'"http://dev-courses-misuc.ixuea.com/%s"')
            dimension = minSdkVersion
        }
    }
}

//sharesdk配置
//真实项⽬只需要配置⽤到的平台
//我们这⾥全写这⾥⽬的是⽅便⼤家参考
MobSDK {
    appKey "35ca9579e6801"
    appSecret "70e047f73ab0c17104e32f033e1cc6b0"
//第三⽅平台配置
    ShareSDK {
        loopShare true
        devInfo {
            QQ {
                id 7
                sortId 7
                appId "102003099"//需要用自己的
                appKey "jpkTyFJ8j6GDxTmr"//需要用自己的
                shareByAppClient true
                bypassApproval false
                enable true
            }

            SinaWeibo {
                id 1
                sortId 1
                appKey "2485271635"
                appSecret "57df1459afb71180f8b214853bfda520"
                callbackUri "http://www.ixuea.com"
                shareByAppClient true
                enable true
            }
        }
    }
}

dependencies {

    //添加所有libs目录下的jar文件
    implementation fileTree(dir: 'libs', includes: ['*.jar'])

    //兼容性控件
    implementation 'androidx.appcompat:appcompat:1.3.0'

    implementation 'com.google.android.material:material:1.4.0'

    //可视化布局依赖
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //java测试依赖
    testImplementation 'junit:junit:4.13.2'

    //android测试依赖
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //圆形指示器
    //https://github.com/ongakuer/CircleIndicator
    implementation 'me.relex:circleindicator:2.1.6'


    //指示器
    //https://github.com/hackware1993/MagicIndicator
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'


    //提供通过注解的⽅式找控件
    //绑定⽅法
    //https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'

    //apache common lang3⼯具包
    //提供了StringUtils等这样的类
    //http://commons.apache.org/proper/commons-lang/
    implementation 'org.apache.commons:commons-lang3:3.9'

    //toast⼯具类
    //https://github.com/GrenderG/Toasty
    implementation 'com.github.GrenderG:Toasty:1.5.2'

    //MultiDex
    implementation "androidx.multidex:multidex:2.0.0"

    //图⽚加载框架
    //https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'

    //recyclerview控件
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha03'

    //封装了recyclerview控件的第三方库
    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'

    //轮播图
    //https://github.com/youth5201314/banner
    implementation 'com.youth.banner:banner:1.4.10'

    //============================请求⽹络相关=======================================
    //okhttp
    //https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'

    //⽤来打印okhttp请求⽇志
    //当然也可以⾃定义
    implementation("com.squareup.okhttp3:logging-interceptor:4.2.0")

    //retrofit
    //https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'

    //使⽤gson解析json
    //https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.5'

    //适配retrofit使⽤gson解析
    //版本要和retrofit⼀样
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'

    //适配retrofit⽀持rxjava
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'

    //使⽤了Android响应式编程
    //RxJava和RxAndroid区别？
    //简单来说：就是RxAndroid在RxJava的基础上
    //优化了⼀些功能
    //增强了Android特有的功能
    //https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //============================end 请求⽹络相关===========================================


    //==============网络请求debug测试工具=================================================
    //通过OkHttp的拦截器机制
    //实现在Chrome中抓包
    //https://github.com/facebook/stetho
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    //通过OkHttp的拦截器机制
    //实现在应⽤内显示⽹络请求功能
    //https://github.com/ChuckerTeam/chucker
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"
    //===========================网络请求debug测试工具==================================================

    //跨界⾯通信框架
    //https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
}